package cv.focus.core.interfaces.student.web;

import cv.focus.core.application.SpecializationService;
import cv.focus.core.domain.activity.ItemEntity;
import cv.focus.core.domain.user.model.Specialization;
import cv.focus.core.infrastructure.util.BaseController;
import cv.focus.core.infrastructure.util.Result;
import cv.focus.core.infrastructure.util.ResultMessages;
import cv.focus.core.interfaces.user.dto.UserDTO;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.List;

/**
 * Created by Administrator on 2016/8/31.
 */
@Controller
@RequestMapping("/specialization")
public class SpecializationController  extends BaseController {

    private final Logger logger = Logger.getLogger(SpecializationController.class);
    @Resource
    private SpecializationService specializationService;
    //导师跳转页面
    @RequestMapping("/list")
    public String specializaionList(HttpServletRequest request, Model model) {
        //滚动图标显示
        List<ItemEntity> bannerList=specializationService.findBannerList();
        //活动显示
        List<ItemEntity> itemList=specializationService.findItemList();
        model.addAttribute("bannerList",bannerList);
        model.addAttribute("itemList",itemList);
        return "specialization/schoolList";
    }

    //国关
    @RequestMapping("/{ItemId}")
    public String uirUrl( @PathVariable Integer ItemId,HttpServletRequest request,Model model) {
        ItemEntity Item=specializationService.findItemById(ItemId);
        //增加浏览量方法
        specializationService.addPageviews(Item);
        model.addAttribute("Item",Item);
        String itemUrl = Item.getItemUrl();
        return "specialization/"+itemUrl;
    }

    /*//太平洋
    @RequestMapping("/pacific")
    public String pacificUrl( HttpServletRequest request,Model model) {

        ItemEntity Item=specializationService.findItemById(3);
        //增加浏览量方法
        specializationService.addPageviews(Item);
        model.addAttribute("Item",Item);
        return "specialization/pacific";
    }

    //CIS
    @RequestMapping("/cis")
    public String cisUrl( HttpServletRequest request,Model model) {
        ItemEntity Item=specializationService.findItemById(1);
        //增加浏览量方法
        specializationService.addPageviews(Item);
        model.addAttribute("Item",Item);
        return "specialization/cis";
    }*/

    //以后备用
    @RequestMapping("/activitiesInfo/{itemId}")
    public String activitiesInfo(@PathVariable Integer itemId,Model model){

       ItemEntity Item=specializationService.findItemById(itemId);
        //增加浏览量方法
        specializationService.addPageviews(Item);
        model.addAttribute("Item",Item);
        return null;
    }


    @RequestMapping("/intro8")
    public String specializaionShowIntro8( HttpServletRequest request) {
        return "specialization/intro8";
    }
    @RequestMapping("/guoyujiao")
    public String specializaionShowGyj( HttpServletRequest request) {
        return "specialization/guoyujiao";
    }
    @RequestMapping("/baolei")
    public String specializaionShowBl( HttpServletRequest request) {
        return "specialization/baolei";
    }


    @RequestMapping("/submit")
    @ResponseBody
    public Result SpecializationSubmit( HttpServletRequest request) {
        Result result = null;
        try {
            UserDTO loginUser = getLoginUser(request);
            //测试数据
            Integer userId  = loginUser.getUserId();
            String userName  = loginUser.getUserName();
            Integer tutorId = Integer.parseInt(request.getParameter("tutorId"));
            String tutorName = (String) request.getParameter("tutorName");
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");//小写的mm表示的是分钟
            String dstr=(String)request.getParameter("specializationTime") +  ":00";
            Date specializationTime=sdf.parse(dstr);
            Date insertTime = new Date();
            int specializationPeriod = Integer.parseInt(request.getParameter("specializationPeriod"));
            String nickname = StringUtils.trimToEmpty((String) request.getParameter("nickname"));
            String mobile = StringUtils.trimToEmpty((String) request.getParameter("mobile"));
            String email = StringUtils.trimToEmpty((String) request.getParameter("email"));
            String comments = StringUtils.trimToEmpty((String) request.getParameter("comments"));
            float cost  = Float.parseFloat(request.getParameter("cost"));
            //int state = Integer.parseInt(request.getParameter("state"));
            //系统支付功能完善前，所有系统表单默认提交状态都为未付款，即state为0.
            int state = 0;
            specializationService.createSpecialization(userId,userName,tutorId,tutorName,specializationTime,specializationPeriod,nickname,mobile,email,comments,state,insertTime,cost);
            result = newSuccessResult(ResultMessages.SPECIALIZATION_SUCCESS, null);
        } catch (Exception e) {
            logger.error("SpecializationController.SpecializationSubmit()", e);
            result = newFaildResult(ResultMessages.SYSTEM_ERROR);
        }
        return result;
    }


    @RequestMapping("/mySpecialization")
    public String inBox( HttpServletRequest request) {

        try {
            UserDTO loginUser = getLoginUser(request);
            //测试数据
            Integer userId  = loginUser.getUserId();
            List<Specialization> SpecializationList = new ArrayList<Specialization>();
            if("1".equals(loginUser.getRoleR())){
                SpecializationList = specializationService.findByTutorId(userId);
            }else if("0".equals(loginUser.getRoleR())){
                SpecializationList = specializationService.findByUserId(userId);
            }

            request.setAttribute("specializationList",SpecializationList);
        } catch (Exception e) {
            logger.error("MessageController.inBox()", e);
        }
        return "user/mySpecialization";
    }

    @RequestMapping("/allSpecialization")
    public String inBox2( HttpServletRequest request) {

        try {
            UserDTO loginUser = getLoginUser(request);
            if(loginUser == null){
                return "specialization/intro8";
            }
            //测试数据
            Integer userId  = loginUser.getUserId();
            List<Specialization> SpecializationList = new ArrayList<Specialization>();
            if(checkAdmin(userId)){
                SpecializationList = specializationService.findAll();
            }
            request.setAttribute("specializationList",SpecializationList);
            if(SpecializationList.size() == 0){
                return "specialization/intro8";
            }
        } catch (Exception e) {
            logger.error("SpecializationController.inBox2()", e);
        }
        return "specialization/specializaitionAll";
    }

    private boolean checkAdmin(int id){
        boolean check = false;
        int[] adminArray = {415,342,456,451,457,422,411,450};
        for(int i = 0; i < adminArray.length; i++){
            if(id == adminArray[i]){
                check = true;
                break;
            }
        }
        return  check;
    }

}
